import React, { useState, useCallback, useMemo } from 'react';
import { 
  UploadCloud, Zap, Share2, CornerDownRight, ThumbsUp, Loader2, 
  Calendar, Users, User, Clock, MapPin, Star, Scissors, Briefcase 
} from 'lucide-react';

// --- DATA SIMULASI ---
const MOCK_SERVICES = [
    { id: 'svc1', name: 'Haircut + Wash', duration: 45, price: 80000 },
    { id: 'svc2', name: 'Haircut + Styling', duration: 30, price: 65000 },
    { id: 'svc3', name: 'Shave & Grooming', duration: 40, price: 75000 },
];

const MOCK_TECHNICIANS = [
  { id: 'tech1', name: 'Joe "The Fade"', specialty: 'Fade Master', rating: 4.9, bio: 'Ahli dalam potongan Fade dan Taper modern. Pengalaman 5 tahun di bidangnya.', availability: ['09:00', '11:00', '14:00', '16:00'], portfolio: [
    { title: 'Modern Taper', url: 'https://placehold.co/400x400/38a169/ffffff?text=Modern+Taper', caption: 'Clean lines, sharp look.' },
    { title: 'Textured Crop', url: 'https://placehold.co/400x400/3182ce/ffffff?text=Textured+Crop', caption: 'Texturizing for maximum volume.' }
  ]},
  { id: 'tech2', name: 'Rina "SmoothCut"', specialty: 'Hair & Beard Sculptor', rating: 4.7, bio: 'Fokus pada grooming komplit, termasuk perawatan janggut dan kumis.', availability: ['10:00', '13:00', '15:00', '17:00'], portfolio: [
    { title: 'Classic Slickback', url: 'https://placehold.co/400x400/9f7aea/ffffff?text=Classic+Slickback', caption: 'Timeless elegance.' },
    { title: 'Beard Trim', url: 'https://placehold.co/400x400/f6ad55/ffffff?text=Beard+Sculpt', caption: 'Perfectly sculpted.' }
  ]}
];

// Simulasi Model AI (Simulasi akan dipanggil oleh backend sungguhan)
const simulateAIGeneration = (rawImage) => {
  return new Promise((resolve) => {
    setTimeout(() => {
      const enhancedImage = rawImage.replace('placehold', 'placehold.co/600x600/285d89/ffffff?text=AI+Enhanced+Style');
      const captions = [
        "Fresh cut, who dis? Potongan rambut baru ini siap bikin kamu jadi sorotan! âœ¨ #BarberAI",
        "The transformation is complete. Detail presisi, gaya maksimal. Cek portofolio kami! ðŸ’ˆ",
        "Level up your look! Gaya ini dijamin menaikkan kepercayaan diri 100%. Apa caption pilihanmu?"
      ];
      
      resolve({
        enhancedImage,
        captions,
      });
    }, 3000); // Simulasi waktu pemrosesan
  });
};


// --- KOMPONEN FITUR GENERATIF (Dari sebelumnya) ---
const GenerativeFlow = ({ setStage, setMessage }) => {
    const [aiStage, setAiStage] = useState('upload'); // 'upload', 'processing', 'result'
    const [rawImageURL, setRawImageURL] = useState(null);
    const [enhancedImageURL, setEnhancedImageURL] = useState(null);
    const [generatedCaptions, setGeneratedCaptions] = useState([]);
    const [selectedCaption, setSelectedCaption] = useState('');

    const handleFileUpload = useCallback((e) => {
        const file = e.target.files[0];
        if (file) {
            // Simulasi upload ke Supabase Storage
            const mockURL = 'https://placehold.co/600x600/f87171/ffffff?text=FOTO+MENTAH';
            setRawImageURL(mockURL);
            setAiStage('processing');
            setMessage('Foto mentah berhasil diunggah. Memulai pemrosesan AI...');
            processAI(mockURL);
        }
    }, [setMessage]);

    const processAI = useCallback(async (mockURL) => {
        try {
            const result = await simulateAIGeneration(mockURL);
            setEnhancedImageURL(result.enhancedImage);
            setGeneratedCaptions(result.captions);
            setAiStage('result');
            setMessage('Pemrosesan AI Selesai! Foto dan Caption siap dibagikan.');
        } catch (error) {
            console.error("Gagal memproses AI:", error);
            setMessage('Gagal memproses AI. Silakan coba lagi.');
            setAiStage('upload');
        }
    }, [setMessage]);

    const renderContent = useMemo(() => {
        switch (aiStage) {
            case 'upload':
                return (
                    <div 
                        className="flex flex-col items-center justify-center p-8 border-4 border-dashed border-indigo-400 text-indigo-700 bg-indigo-50 hover:bg-indigo-100 transition duration-300 rounded-2xl cursor-pointer w-full h-64"
                        onClick={() => document.getElementById('file-upload').click()}
                    >
                        <UploadCloud className="w-12 h-12 mb-3" />
                        <p className="text-lg font-semibold">Ketuk untuk Unggah Foto Hasil Potong</p>
                        <p className="text-sm text-indigo-500 mt-1">Gunakan fitur AI untuk hasil konten terbaik.</p>
                        <input type="file" id="file-upload" accept="image/*" onChange={handleFileUpload} className="hidden" />
                    </div>
                );
            case 'processing':
                return (
                    <div className="flex flex-col items-center justify-center p-8 bg-gray-50 text-gray-700 rounded-2xl w-full h-64 shadow-inner">
                        <Loader2 className="w-12 h-12 text-indigo-500 animate-spin mb-4" />
                        <h3 className="text-xl font-bold">AI Sedang Bekerja Keras...</h3>
                        <p className="text-sm text-gray-500 mt-2">Peningkatan gambar dan generasi caption.</p>
                        {rawImageURL && (<img src={rawImageURL} alt="Foto Mentah" className="mt-4 w-20 h-20 object-cover rounded-lg border-2 border-red-500" />)}
                    </div>
                );
            case 'result':
                return (
                    <div className="space-y-6">
                        <h3 className="text-2xl font-bold text-gray-800 flex items-center"><Zap className="w-6 h-6 mr-2 text-yellow-500 fill-yellow-200" /> Hasil Generatif AI</h3>
                        <div className="relative bg-gray-200 rounded-xl overflow-hidden shadow-lg">
                            <img src={enhancedImageURL} alt="Foto Hasil AI" className="w-full h-auto max-h-96 object-cover" onError={(e) => { e.target.onerror = null; e.target.src = "https://placehold.co/600x600/374151/ffffff?text=Image+Load+Error"; }} />
                            <div className="absolute bottom-0 left-0 right-0 p-3 bg-gradient-to-t from-black/70 to-transparent">
                                <p className="text-white text-lg font-medium">{selectedCaption || 'Pilih salah satu caption di bawah...'}</p>
                            </div>
                        </div>
                        <div className="bg-white p-4 rounded-xl shadow-md border border-gray-100 space-y-3">
                            <p className="text-sm font-semibold text-indigo-600">Pilih Caption Terbaik:</p>
                            {generatedCaptions.map((caption, index) => (
                                <div key={index} 
                                    className={`p-3 rounded-lg flex items-start cursor-pointer transition ${selectedCaption === caption ? 'bg-indigo-100 border-2 border-indigo-500 shadow-sm' : 'bg-gray-50 hover:bg-gray-100'}`}
                                    onClick={() => setSelectedCaption(caption)}
                                >
                                    <CornerDownRight className={`w-4 h-4 mt-1 mr-2 flex-shrink-0 ${selectedCaption === caption ? 'text-indigo-600' : 'text-gray-400'}`} />
                                    <span className="text-sm text-gray-700 leading-relaxed">{caption}</span>
                                    {selectedCaption === caption && <ThumbsUp className="w-4 h-4 ml-auto text-green-500 flex-shrink-0" />}
                                </div>
                            ))}
                        </div>
                        <div className="flex justify-between space-x-4 pt-2">
                            <button className="w-full flex items-center justify-center p-3 text-white bg-green-500 hover:bg-green-600 font-semibold rounded-xl shadow-md transition disabled:bg-gray-400"
                                disabled={!selectedCaption} onClick={() => setMessage('Foto dan Caption berhasil dibagikan! (Simulasi Aksi)')}>
                                <Share2 className="w-5 h-5 mr-2" /> Bagikan
                            </button>
                            <button className="w-full p-3 text-indigo-700 bg-indigo-100 hover:bg-indigo-200 font-semibold rounded-xl shadow-md transition"
                                onClick={() => { setAiStage('upload'); setRawImageURL(null); setEnhancedImageURL(null); setGeneratedCaptions([]); setSelectedCaption(''); setMessage('Siap untuk foto hasil potong berikutnya.'); }}>
                                Potong Baru
                            </button>
                        </div>
                    </div>
                );
            default: return null;
        }
    }, [aiStage, rawImageURL, enhancedImageURL, generatedCaptions, selectedCaption, handleFileUpload, processAI, setMessage]);

    return (
        <div className="p-4 sm:p-0">
            {renderContent}
        </div>
    );
};


// --- KOMPONEN PROFIL TEKNISI (CAPSTER) ---
const TechnicianProfile = ({ technician, setMainStage, setTechnician }) => {
    return (
        <div className="space-y-6">
            <div className="flex items-center space-x-4 p-4 bg-white rounded-xl shadow-md">
                <User className="w-16 h-16 text-indigo-500 p-2 border-2 border-indigo-300 rounded-full flex-shrink-0" />
                <div>
                    <h2 className="text-3xl font-bold text-gray-800">{technician.name}</h2>
                    <p className="text-lg text-indigo-600 font-semibold flex items-center"><Briefcase className="w-4 h-4 mr-1"/> {technician.specialty}</p>
                    <div className="flex items-center mt-1 text-yellow-500">
                        <Star className="w-4 h-4 fill-yellow-400" />
                        <span className="ml-1 font-medium">{technician.rating}</span>
                    </div>
                </div>
            </div>

            <div className="bg-white p-6 rounded-xl shadow-md space-y-4">
                <h3 className="text-xl font-bold text-gray-800">Tentang {technician.name.split(' ')[0]}</h3>
                <p className="text-gray-600 italic border-l-4 border-indigo-400 pl-3">{technician.bio}</p>
            </div>

            <div className="bg-white p-6 rounded-xl shadow-md">
                <h3 className="text-xl font-bold text-gray-800 mb-4">Portofolio AI (Hasil Terbaik)</h3>
                <div className="grid grid-cols-2 gap-4">
                    {technician.portfolio.map((post, index) => (
                        <div key={index} className="rounded-lg overflow-hidden shadow-lg border border-gray-100 transform hover:scale-[1.02] transition duration-300">
                            <img src={post.url} alt={post.title} className="w-full h-32 object-cover" />
                            <div className="p-3 bg-gray-50">
                                <p className="font-semibold text-sm text-gray-800">{post.title}</p>
                                <p className="text-xs text-gray-500 italic truncate">{post.caption}</p>
                            </div>
                        </div>
                    ))}
                </div>
            </div>
            <button 
                className="w-full p-4 bg-indigo-600 text-white font-bold rounded-xl shadow-lg hover:bg-indigo-700 transition"
                onClick={() => { setMainStage('booking'); setTechnician(technician); }}
            >
                Pesan Sekarang dengan {technician.name.split(' ')[0]}
            </button>
        </div>
    );
};


// --- KOMPONEN BOOKING/PEMESANAN ---
const BookingPage = ({ setMainStage, setMessage, initialTechnician }) => {
    const [selectedService, setSelectedService] = useState(null);
    const [selectedTechnician, setSelectedTechnician] = useState(initialTechnician);
    const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);
    const [selectedTime, setSelectedTime] = useState(null);

    // Fungsi untuk mendapatkan hari dalam format Indonesia (simulasi sederhana)
    const getDayName = (dateStr) => {
        const date = new Date(dateStr);
        return date.toLocaleDateString('id-ID', { weekday: 'long' });
    };

    const handleBooking = () => {
        if (selectedService && selectedTechnician && selectedTime) {
            const dateDisplay = getDayName(selectedDate);
            setMessage(`Pemesanan berhasil! Anda pesan ${selectedService.name} dengan ${selectedTechnician.name} pada ${dateDisplay}, ${selectedTime}.`);
            setMainStage('generative'); // Kembali ke tampilan utama atau notifikasi sukses
        } else {
            setMessage('Harap lengkapi semua pilihan: Layanan, Teknisi, dan Waktu.');
        }
    };

    return (
        <div className="space-y-6">
            <h2 className="text-2xl font-bold text-gray-800 flex items-center"><Calendar className="w-6 h-6 mr-2 text-red-500" /> Buat Janji Temu</h2>

            {/* 1. Pilih Layanan */}
            <div className="bg-white p-4 rounded-xl shadow-md border-t-4 border-indigo-500">
                <p className="font-semibold text-lg mb-3 flex items-center text-indigo-700"><Scissors className="w-5 h-5 mr-2"/> 1. Pilih Layanan</p>
                <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
                    {MOCK_SERVICES.map(service => (
                        <div key={service.id} 
                            className={`p-3 rounded-lg border-2 cursor-pointer transition ${selectedService?.id === service.id ? 'bg-indigo-50 border-indigo-600 shadow-inner' : 'bg-gray-50 border-gray-200 hover:border-indigo-300'}`}
                            onClick={() => setSelectedService(service)}>
                            <p className="font-bold text-gray-800">{service.name}</p>
                            <p className="text-sm text-gray-500">Rp {service.price.toLocaleString('id-ID')} ({service.duration} min)</p>
                        </div>
                    ))}
                </div>
            </div>

            {/* 2. Pilih Teknisi */}
            <div className="bg-white p-4 rounded-xl shadow-md border-t-4 border-yellow-500">
                <p className="font-semibold text-lg mb-3 flex items-center text-yellow-700"><Users className="w-5 h-5 mr-2"/> 2. Pilih Capster</p>
                <div className="grid grid-cols-2 gap-3">
                    {MOCK_TECHNICIANS.map(tech => (
                        <div key={tech.id} 
                            className={`p-3 rounded-lg border-2 cursor-pointer transition text-center ${selectedTechnician?.id === tech.id ? 'bg-yellow-50 border-yellow-600 shadow-inner' : 'bg-gray-50 border-gray-200 hover:border-yellow-300'}`}
                            onClick={() => setSelectedTechnician(tech)}>
                            <p className="font-bold text-gray-800 truncate">{tech.name}</p>
                            <p className="text-sm text-gray-500 flex items-center justify-center"><Star className="w-3 h-3 fill-yellow-400 mr-1"/> {tech.rating}</p>
                            <p className="text-xs text-indigo-500 mt-1">{tech.specialty}</p>
                        </div>
                    ))}
                </div>
            </div>

            {/* 3. Pilih Tanggal & Waktu */}
            {selectedTechnician && (
                <div className="bg-white p-4 rounded-xl shadow-md border-t-4 border-green-500">
                    <p className="font-semibold text-lg mb-3 flex items-center text-green-700"><Clock className="w-5 h-5 mr-2"/> 3. Pilih Waktu</p>
                    <div className="mb-4">
                        <label className="block text-sm font-medium text-gray-700 mb-1">Tanggal</label>
                        <input type="date" value={selectedDate} onChange={(e) => { setSelectedDate(e.target.value); setSelectedTime(null); }}
                            className="w-full p-2 border border-gray-300 rounded-lg focus:ring-green-500 focus:border-green-500"
                            min={new Date().toISOString().split('T')[0]} />
                    </div>

                    <p className="text-sm font-medium text-gray-700 mb-2">Slot Tersedia ({getDayName(selectedDate)}):</p>
                    <div className="flex flex-wrap gap-3">
                        {selectedTechnician.availability.map(time => (
                            <button key={time}
                                className={`px-4 py-2 rounded-full text-sm font-semibold transition ${selectedTime === time ? 'bg-green-600 text-white shadow-md' : 'bg-gray-200 text-gray-700 hover:bg-green-100'}`}
                                onClick={() => setSelectedTime(time)}>
                                {time}
                            </button>
                        ))}
                    </div>
                </div>
            )}

            {/* Tombol Konfirmasi Booking */}
            <button 
                className="w-full p-4 bg-indigo-600 text-white font-bold rounded-xl shadow-lg hover:bg-indigo-700 transition disabled:opacity-50"
                onClick={handleBooking}
                disabled={!selectedService || !selectedTechnician || !selectedTime}
            >
                Konfirmasi Pemesanan (Rp {selectedService?.price.toLocaleString('id-ID') || '...'})
            </button>

            {/* Tombol Back */}
            <button 
                className="w-full p-3 text-indigo-600 bg-indigo-100 rounded-xl hover:bg-indigo-200 transition"
                onClick={() => setMainStage('generative')}
            >
                Batal
            </button>
        </div>
    );
};


// --- KOMPONEN UTAMA APLIKASI ---
const App = () => {
    // State navigasi utama: 'generative', 'booking', 'technician_list', 'technician_profile'
    const [mainStage, setMainStage] = useState('generative'); 
    const [message, setMessage] = useState('Selamat datang di Barber-AI App!');
    const [selectedTechnician, setSelectedTechnician] = useState(null); // Untuk transfer data ke profil/booking

    const renderMainContent = useMemo(() => {
        switch (mainStage) {
            case 'booking':
                return <BookingPage setMainStage={setMainStage} setMessage={setMessage} initialTechnician={selectedTechnician} />;
            case 'technician_list':
                // List Teknisi Sederhana untuk navigasi ke profil
                return (
                    <div className="space-y-4">
                        <h2 className="text-2xl font-bold text-gray-800">Daftar Capster Kami</h2>
                        {MOCK_TECHNICIANS.map(tech => (
                            <div key={tech.id} 
                                className="p-4 bg-white rounded-xl shadow-md flex items-center justify-between cursor-pointer hover:bg-gray-50 transition"
                                onClick={() => { setMainStage('technician_profile'); setSelectedTechnician(tech); }}>
                                
                                <div>
                                    <p className="font-bold text-lg text-indigo-700">{tech.name}</p>
                                    <p className="text-sm text-gray-500">{tech.specialty}</p>
                                </div>
                                <div className="flex items-center text-yellow-500 font-semibold">
                                    <Star className="w-4 h-4 fill-yellow-400 mr-1"/>
                                    {tech.rating}
                                </div>
                            </div>
                        ))}
                    </div>
                );
            case 'technician_profile':
                return <TechnicianProfile technician={selectedTechnician} setMainStage={setMainStage} setTechnician={setSelectedTechnician} />;
            case 'generative':
            default:
                return <GenerativeFlow setStage={setMainStage} setMessage={setMessage} />;
        }
    }, [mainStage, selectedTechnician]);

    return (
        <div className="min-h-screen bg-gray-50 font-sans p-4 sm:p-8">
            <script src="https://cdn.tailwindcss.com"></script>
            <div className="max-w-xl mx-auto">
                <header className="text-center mb-6">
                    <h1 className="text-4xl font-extrabold text-indigo-700 flex items-center justify-center">
                        <Scissors className='w-8 h-8 mr-2 text-indigo-500 rotate-90'/> Barber-AI App
                    </h1>
                </header>

                {/* Navigasi Utama */}
                <nav className="flex justify-around mb-6 p-2 bg-white rounded-full shadow-lg sticky top-4 z-10">
                    <NavItem 
                        icon={Zap} 
                        label="AI Content" 
                        active={mainStage === 'generative'} 
                        onClick={() => setMainStage('generative')}
                    />
                    <NavItem 
                        icon={Calendar} 
                        label="Booking" 
                        active={mainStage === 'booking'} 
                        onClick={() => setMainStage('booking')}
                    />
                    <NavItem 
                        icon={Users} 
                        label="Capster" 
                        active={mainStage === 'technician_list' || mainStage === 'technician_profile'} 
                        onClick={() => setMainStage('technician_list')}
                    />
                </nav>

                {/* Kotak Pesan Status Global */}
                {message && (
                    <div className="mt-6 mb-6 p-4 rounded-xl text-center shadow-lg bg-yellow-100 text-yellow-700">
                        <p className="font-medium">{message}</p>
                    </div>
                )}
                
                {/* Konten Utama (Berubah berdasarkan mainStage) */}
                <main className="p-6 sm:p-8 rounded-3xl shadow-2xl bg-white border border-gray-200 min-h-[500px]">
                    {renderMainContent}
                </main>

                <footer className="text-center mt-10 text-sm text-gray-400">
                    Aplikasi Generatif Barbershop | Prototype Integrasi AI & Booking
                </footer>
            </div>
        </div>
    );
};

// Komponen Navigasi Kecil
const NavItem = ({ icon: Icon, label, active, onClick }) => (
    <button 
        className={`flex flex-col items-center p-2 rounded-full transition duration-300 ${active ? 'bg-indigo-500 text-white shadow-md' : 'text-gray-500 hover:text-indigo-500'}`}
        onClick={onClick}
    >
        <Icon className="w-5 h-5"/>
        <span className="text-xs font-medium hidden sm:block mt-1">{label}</span>
    </button>
);

export default App;

